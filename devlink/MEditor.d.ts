import * as React from "react";
import * as Types from "./types";

declare function MEditor(props: {
  as?: React.ElementType;
  headHeader?: Types.Visibility.VisibilityConditions;
  headTitleSrc?: React.ReactNode;
  headCancelClick?: Types.Devlink.RuntimeProps;
  bodyContentMap?: Types.Devlink.Slot;
  inputBaseInpt?: Types.Visibility.VisibilityConditions;
  inputBaseLIcnSrc?: React.ReactNode;
  inputBaseLIcnClick?: Types.Devlink.RuntimeProps;
  inputBaseFldClick?: Types.Devlink.RuntimeProps;
  inputBaseFldChange?: Types.Builtin.Text;
  inputBaseSendClick?: Types.Devlink.RuntimeProps;
  inputMediaInpt?: Types.Visibility.VisibilityConditions;
  inputMediaLIcnSrc?: React.ReactNode;
  inputMediaLIcnClick?: Types.Devlink.RuntimeProps;
  inputMediaSegBtnAllAct?: Types.Builtin.Text;
  inputMediaSegBtnAllClick?: Types.Devlink.RuntimeProps;
  inputMediaSegBtnImgAct?: Types.Builtin.Text;
  inputMediaSegBtnImgClick?: Types.Devlink.RuntimeProps;
  inputMediaSegBtnScanAct?: Types.Builtin.Text;
  inputMediaSegBtnScanClick?: Types.Devlink.RuntimeProps;
  inputMediaSegBtnBkmrkAct?: Types.Builtin.Text;
  inputMediaSegBtnBkmrkClick?: Types.Devlink.RuntimeProps;
  inputAddInpt?: Types.Visibility.VisibilityConditions;
  inputAddClick?: Types.Devlink.RuntimeProps;
  inputAddFldClick?: Types.Devlink.RuntimeProps;
  inputScanInpt?: Types.Visibility.VisibilityConditions;
  inputScanClick?: Types.Devlink.RuntimeProps;
  inputScanFldClick?: Types.Devlink.RuntimeProps;
  navNavMap?: Types.Devlink.Slot;
  navExampleEditorNav?: Types.Visibility.VisibilityConditions;
  navBack?: Types.Visibility.VisibilityConditions;
  navTxt?: Types.Visibility.VisibilityConditions;
  navMedia?: Types.Visibility.VisibilityConditions;
  navAtch?: Types.Visibility.VisibilityConditions;
  navTag?: Types.Visibility.VisibilityConditions;
  navShare?: Types.Visibility.VisibilityConditions;
  navAdminMsg?: Types.Visibility.VisibilityConditions;
  navMbr?: Types.Visibility.VisibilityConditions;
  navBackClick?: Types.Devlink.RuntimeProps;
  navTxtClick?: Types.Devlink.RuntimeProps;
  navMediaClick?: Types.Devlink.RuntimeProps;
  navAtchClick?: Types.Devlink.RuntimeProps;
  navTagClick?: Types.Devlink.RuntimeProps;
  navShareClick?: Types.Devlink.RuntimeProps;
  navAdminMsgClick?: Types.Devlink.RuntimeProps;
  navMbrClick?: Types.Devlink.RuntimeProps;
  panelEmoji?: Types.Visibility.VisibilityConditions;
  panelEmojiMap?: Types.Devlink.Slot;
  panelColor?: Types.Visibility.VisibilityConditions;
  panelColorMap?: Types.Devlink.Slot;
  panelColorPaletteExample?: Types.Visibility.VisibilityConditions;
  editor?: Types.Visibility.VisibilityConditions;
  edClr?: Types.Builtin.Text;
  sheet?: Types.Visibility.VisibilityConditions;
  sheetMap?: Types.Devlink.Slot;
  linkAdd?: Types.Visibility.VisibilityConditions;
}): React.JSX.Element;
