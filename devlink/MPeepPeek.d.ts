import * as React from "react";
import * as Types from "./types";

declare function MPeepPeek(props: {
  as?: React.ElementType;
  heroImgSrc?: Types.Asset.Image;
  heroImgAlt?: Types.Basic.AltText;
  heroQrClick?: Types.Devlink.RuntimeProps;
  heroMoreClick?: Types.Devlink.RuntimeProps;
  heroAvtrSrc?: Types.Asset.Image;
  heroAvtrAlt?: Types.Basic.AltText;
  heroTitleSrc?: React.ReactNode;
  heroSubtxtSrc?: React.ReactNode;
  heroProfClick?: Types.Devlink.RuntimeProps;
  heroBtnIcnSrc?: React.ReactNode;
  heroBtnTxtSrc?: React.ReactNode;
  heroBtnClick?: Types.Devlink.RuntimeProps;
  inviteClick?: Types.Devlink.RuntimeProps;
  alertClick?: Types.Devlink.RuntimeProps;
  groupsClick?: Types.Devlink.RuntimeProps;
  peepClick?: Types.Devlink.RuntimeProps;
  muteClick?: Types.Devlink.RuntimeProps;
  blockClick?: Types.Devlink.RuntimeProps;
  disClick?: Types.Devlink.RuntimeProps;
  aboutSrc?: React.ReactNode;
  rankSrc?: React.ReactNode;
  estSrc?: React.ReactNode;
  locationSrc?: React.ReactNode;
  domainSrc?: React.ReactNode;
  domainClick?: Types.Devlink.RuntimeProps;
  socialMap?: Types.Devlink.Slot;
  socialExample?: Types.Visibility.VisibilityConditions;
  notesChange?: Types.Builtin.Text;
  notesClick?: Types.Devlink.RuntimeProps;
  sheet?: Types.Visibility.VisibilityConditions;
  sheetMap?: Types.Devlink.Slot;
  groupExample?: Types.Visibility.VisibilityConditions;
  peepExample?: Types.Visibility.VisibilityConditions;
  muteExample?: Types.Visibility.VisibilityConditions;
  blockExample?: Types.Visibility.VisibilityConditions;
  dis?: Types.Visibility.VisibilityConditions;
  disconnectExample?: Types.Visibility.VisibilityConditions;
}): React.JSX.Element;
