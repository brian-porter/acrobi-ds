import * as React from "react";
import * as Types from "./types";

declare function SnipSecPeep(props: {
  as?: React.ElementType;
  sec?: Types.Visibility.VisibilityConditions;
  secHeadTitleIcn?: Types.Visibility.VisibilityConditions;
  secHeadAct1?: Types.Visibility.VisibilityConditions;
  conPerson?: Types.Visibility.VisibilityConditions;
  conBrand?: Types.Visibility.VisibilityConditions;
  conAvtrSrc?: Types.Asset.Image;
  conAvtrAlt?: Types.Basic.AltText;
  conNameSrc?: React.ReactNode;
  conSec1Map?: Types.Devlink.Slot;
  conExampleSec1Connection?: Types.Visibility.VisibilityConditions;
  conSec2Map?: Types.Devlink.Slot;
  conExampleSec2Group?: Types.Visibility.VisibilityConditions;
  conActvMap?: Types.Devlink.Slot;
  secHead?: Types.Visibility.VisibilityConditions;
  exSec1Sec1Sec?: Types.Visibility.VisibilityConditions;
  exSec1Sec1VizSrc?: Types.Asset.Image;
  exSec1Sec1VizAlt?: Types.Basic.AltText;
  exSec1Sec1TitleSrc?: React.ReactNode;
  exSec1Sec1CellClick?: Types.Devlink.RuntimeProps;
  exSec1Sec1Stat1Src?: React.ReactNode;
  exSec1Sec1Stat2Src?: React.ReactNode;
  exSec1Sec1Stat3Src?: React.ReactNode;
  exSec2Sec2Sec?: Types.Visibility.VisibilityConditions;
  exSec2Sec2SecHead?: Types.Visibility.VisibilityConditions;
  exSec2Sec2VizSrc?: Types.Asset.Image;
  exSec2Sec2VizAlt?: Types.Basic.AltText;
  exSec2Sec2BnrAvtr1Src?: Types.Asset.Image;
  exSec2Sec2BnrAvtr2Src?: Types.Asset.Image;
  exSec2Sec2BnrAvtr3Src?: Types.Asset.Image;
  exSec2Sec2BnrAvtr4Src?: Types.Asset.Image;
  exSec2Sec2BnrAvtr5Src?: Types.Asset.Image;
  exSec2Sec2BnrAvtr2?: Types.Visibility.VisibilityConditions;
  exSec2Sec2BnrAvtr3?: Types.Visibility.VisibilityConditions;
  exSec2Sec2BnrAvtr4?: Types.Visibility.VisibilityConditions;
  exSec2Sec2BnrAvtr5?: Types.Visibility.VisibilityConditions;
  exSec2Sec2QtySrc?: React.ReactNode;
  exSec2Sec2TitleSrc?: React.ReactNode;
  exSec2Sec2CellClick?: Types.Devlink.RuntimeProps;
  exActvActvSec?: Types.Visibility.VisibilityConditions;
  exActvActvSecHead?: Types.Visibility.VisibilityConditions;
  exActvActvVizSrc?: Types.Asset.Image;
  stat1Src?: React.ReactNode;
  secHeadTitleIcnSrc?: React.ReactNode;
  secHeadTitleSrc?: React.ReactNode;
  secHeadAct1TxtSrc?: React.ReactNode;
  secHeadAct1Click?: Types.Devlink.RuntimeProps;
  conExampleActvItm?: Types.Visibility.VisibilityConditions;
  exActvActvVizAlt?: Types.Basic.AltText;
  exActvActvTitleSrc?: React.ReactNode;
  exActvActvSubtxtSrc?: React.ReactNode;
  exActvActvRTxtSrc?: React.ReactNode;
  exActvActvAct?: Types.Visibility.VisibilityConditions;
  exActvActvActClick?: Types.Devlink.RuntimeProps;
  exActvActvCellClick?: Types.Devlink.RuntimeProps;
  stats?: Types.Visibility.VisibilityConditions;
  stat2Src?: React.ReactNode;
  stat3Src?: React.ReactNode;
  stat4Src?: React.ReactNode;
  stat2?: Types.Visibility.VisibilityConditions;
  stat3?: Types.Visibility.VisibilityConditions;
  stat4?: Types.Visibility.VisibilityConditions;
}): React.JSX.Element;
