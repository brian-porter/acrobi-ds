import * as React from "react";
import * as Types from "./types";

declare function MMediaView(props: {
  as?: React.ElementType;
  mediaView?: Types.Visibility.VisibilityConditions;
  bbc?: Types.Visibility.VisibilityConditions;
  baseHead?: Types.Visibility.VisibilityConditions;
  titleSrc?: React.ReactNode;
  subtxtSrc?: React.ReactNode;
  titleClick?: Types.Devlink.RuntimeProps;
  moreClick?: Types.Devlink.RuntimeProps;
  postPostHead?: Types.Visibility.VisibilityConditions;
  postPostAtrbAvtr?: Types.Asset.Image;
  postPostAtrbAvtrAlt?: Types.Basic.AltText;
  postPostAtrbName?: React.ReactNode;
  postPostAtrbRankSrc?: React.ReactNode;
  postPostAtrbRank?: Types.Visibility.VisibilityConditions;
  postPostAtrbClick?: Types.Devlink.RuntimeProps;
  postPostAtrbAct?: Types.Visibility.VisibilityConditions;
  postPostAtrbActMoreClick?: Types.Devlink.RuntimeProps;
  postPostAtrbActTime?: React.ReactNode;
  postPostTitle?: Types.Visibility.VisibilityConditions;
  postPostTitleSrc?: React.ReactNode;
  postPostBodySrc?: React.ReactNode;
  postPostExpIcnSrc?: React.ReactNode;
  postPostExpClick?: Types.Devlink.RuntimeProps;
  bbcImgBarMap?: Types.Devlink.Slot;
  bbcExampleImgBar?: Types.Visibility.VisibilityConditions;
  bbcImgBarImgSrc?: Types.Asset.Image;
  bbcImgBarImgAlt?: Types.Basic.AltText;
  bbcImgBarImgActv?: Types.Visibility.VisibilityConditions;
  bbcImgBarImgClick?: Types.Devlink.RuntimeProps;
  bbcNavMap?: Types.Devlink.Slot;
  bbcExampleNav?: Types.Visibility.VisibilityConditions;
  bbcBtnBack?: Types.Visibility.VisibilityConditions;
  bbcTbrEdit?: Types.Visibility.VisibilityConditions;
  bbcTbrShare?: Types.Visibility.VisibilityConditions;
  bbcTbrBkmrk?: Types.Visibility.VisibilityConditions;
  bbcTbrDlt?: Types.Visibility.VisibilityConditions;
  bbcBtnDo?: Types.Visibility.VisibilityConditions;
  bbcBtnBackClick?: Types.Devlink.RuntimeProps;
  bbcTbrEditClick?: Types.Devlink.RuntimeProps;
  bbcTbrShareClick?: Types.Devlink.RuntimeProps;
  bbcTbrBkmrkClick?: Types.Devlink.RuntimeProps;
  bbcTbrDltClick?: Types.Devlink.RuntimeProps;
  bbcBtnDoClick?: Types.Devlink.RuntimeProps;
  swipeSlideMap?: Types.Devlink.Slot;
  exampleSwipeSlide?: Types.Visibility.VisibilityConditions;
  swipeSlideDetailMap?: Types.Devlink.Slot;
  exampleSwipeSlideDetail?: Types.Visibility.VisibilityConditions;
  bgClr?: Types.Builtin.Text;
}): React.JSX.Element;
