import * as React from "react";
import * as Types from "./types";

declare function Hero(props: {
  as?: React.ElementType;
  sec?: Types.Visibility.VisibilityConditions;
  img?: Types.Visibility.VisibilityConditions;
  vid?: Types.Visibility.VisibilityConditions;
  imgSrc?: Types.Asset.Image;
  imgAlt?: Types.Basic.AltText;
  vidSrc?: Types.Embed.Video;
  icnBar?: Types.Visibility.VisibilityConditions;
  hline?: Types.Visibility.VisibilityConditions;
  btn?: Types.Visibility.VisibilityConditions;
  avtr?: Types.Visibility.VisibilityConditions;
  bnr?: Types.Visibility.VisibilityConditions;
  fadeBtm?: Types.Visibility.VisibilityConditions;
  heroAsp?: Types.Builtin.Text;
  icnBarIcnBarL1Icn?: Types.Visibility.VisibilityConditions;
  icnBarIcnBarR1Icn?: Types.Visibility.VisibilityConditions;
  icnBarIcnBarL1Src?: React.ReactNode;
  icnBarIcnBarL1Clr?: Types.Builtin.Text;
  icnBarIcnBarR1Src?: React.ReactNode;
  icnBarIcnBarR1Clr?: Types.Builtin.Text;
  icnBarIcnBarL1Link?: Types.Basic.Link;
  icnBarIcnBarR1Link?: Types.Basic.Link;
  icnBarIcnBarL1Click?: Types.Devlink.RuntimeProps;
  icnBarIcnBarR1Click?: Types.Devlink.RuntimeProps;
  hlineHlineSubtxt?: Types.Visibility.VisibilityConditions;
  hlineHlineSrc?: React.ReactNode;
  hlineHlineSubtxtSrc?: React.ReactNode;
  hlineHlineSz?: Types.Builtin.Text;
  hlineHlineAlign?: Types.Builtin.Text;
  hlineHlineLoc?: Types.Builtin.Text;
  btnBtnIcn?: Types.Visibility.VisibilityConditions;
  btnBtnTxt?: Types.Visibility.VisibilityConditions;
  btnBtnTxtSrc?: React.ReactNode;
  btnBtnIcnSrc?: React.ReactNode;
  btnBtnSz?: Types.Builtin.Text;
  btnBtnStyl?: Types.Builtin.Text;
  btnBtnLoc?: Types.Builtin.Text;
  btnBtnLink?: Types.Basic.Link;
  btnBtnClick?: Types.Devlink.RuntimeProps;
  avtrAvtrSrc?: Types.Asset.Image;
  avtrAvtrAlt?: Types.Basic.AltText;
  avtrAvtrSz?: Types.Builtin.Text;
  avtrAvtrBdgIcnSz?: Types.Builtin.Text;
  avtrAvtrShape?: Types.Builtin.Text;
  avtrAvtrBdg?: Types.Visibility.VisibilityConditions;
  avtrAvtrBdgClr?: Types.Builtin.Text;
  avtrAvtrBdgIcnSrc?: React.ReactNode;
  avtrAvtrHline?: Types.Visibility.VisibilityConditions;
  avtrAvtrHlineSrc?: React.ReactNode;
  avtrAvtrHlineSz?: Types.Builtin.Text;
  avtrAvtrHlineClr?: Types.Builtin.Text;
  avtrAvtrSubTxtSrc?: React.ReactNode;
  avtrAvtrSubTxtSz?: Types.Builtin.Text;
  avtrAvtrSubTxtClr?: Types.Builtin.Text;
  avtrAvtrSubTxt2?: Types.Visibility.VisibilityConditions;
  avtrAvtrSubTxt2Src?: React.ReactNode;
  avtrAvtrSubTxt2Clr?: Types.Builtin.Text;
  avtrAvtrSubTxt2Sz?: Types.Builtin.Text;
  avtrAvtrClick?: Types.Devlink.RuntimeProps;
  bnrBnrTxtSrc?: React.ReactNode;
  bnrBnrLoc?: Types.Builtin.Text;
  bnrBnrAvtr?: Types.Visibility.VisibilityConditions;
  bnrBnrAvtr2?: Types.Visibility.VisibilityConditions;
  bnrBnrAvtr3?: Types.Visibility.VisibilityConditions;
  bnrBnrAvtr4?: Types.Visibility.VisibilityConditions;
  bnrBnrAvtr5?: Types.Visibility.VisibilityConditions;
  bnrBnrAvtr1Src?: Types.Asset.Image;
  bnrBnrAvtr2Src?: Types.Asset.Image;
  bnrBnrAvtr3Src?: Types.Asset.Image;
  bnrBnrAvtr4Src?: Types.Asset.Image;
  bnrBnrAvtr5Src?: Types.Asset.Image;
  heroLink?: Types.Visibility.VisibilityConditions;
  heroLinkSrc?: Types.Basic.Link;
  heroClick?: Types.Devlink.RuntimeProps;
}): React.JSX.Element;
