import * as React from "react";
import * as Types from "./types";

declare function PItemSnip(props: {
  as?: React.ElementType;
  swipSlideMap?: Types.Devlink.Slot;
  exampleSlide?: Types.Visibility.VisibilityConditions;
  swipSlideDetailMap?: Types.Devlink.Slot;
  exampleSlideDetail?: Types.Visibility.VisibilityConditions;
  swipVizSrc1?: Types.Asset.Image;
  swipVizAlt1?: Types.Basic.AltText;
  swipVizSrc2?: Types.Asset.Image;
  swipVizAlt2?: Types.Basic.AltText;
  swipVizSrc3?: Types.Asset.Image;
  swipVizAlt3?: Types.Basic.AltText;
  qrClick?: Types.Devlink.RuntimeProps;
  moreClick?: Types.Devlink.RuntimeProps;
  itmPriceSrc?: React.ReactNode;
  addIcnSrc?: React.ReactNode;
  addClick?: Types.Devlink.RuntimeProps;
  cartTag?: Types.Visibility.VisibilityConditions;
  cartQty?: React.ReactNode;
  listIcnSrc?: React.ReactNode;
  listClick?: Types.Devlink.RuntimeProps;
  listNameSrc?: React.ReactNode;
  listTypeIcnSrc?: React.ReactNode;
  itmRateValueSrc?: React.ReactNode;
  itmRateQtySrc?: React.ReactNode;
  itmRateClick?: Types.Devlink.RuntimeProps;
  config?: Types.Visibility.VisibilityConditions;
  configMap?: Types.Devlink.Slot;
  itmName?: React.ReactNode;
  itmManuf?: React.ReactNode;
  aboutSrc?: React.ReactNode;
  specsSrc?: React.ReactNode;
  comp?: Types.Visibility.VisibilityConditions;
  compAllClick?: Types.Devlink.RuntimeProps;
  compExample?: Types.Visibility.VisibilityConditions;
  compMap?: Types.Devlink.Slot;
  sellers?: Types.Visibility.VisibilityConditions;
  sellerAllClick?: Types.Devlink.RuntimeProps;
  sellerMap?: Types.Devlink.Slot;
  sellerExample?: Types.Visibility.VisibilityConditions;
  sellerStat1?: React.ReactNode;
  sellerStat2?: React.ReactNode;
  sellerStat3?: React.ReactNode;
  owners?: Types.Visibility.VisibilityConditions;
  ownAllClick?: Types.Devlink.RuntimeProps;
  ownMap?: Types.Devlink.Slot;
  ownersExample?: Types.Visibility.VisibilityConditions;
  ownVizSrc?: Types.Asset.Image;
  ownNameSrc?: React.ReactNode;
  ownStat1?: React.ReactNode;
  ownStat2?: React.ReactNode;
  offers?: Types.Visibility.VisibilityConditions;
  offAllClick?: Types.Devlink.RuntimeProps;
  offVizSrc?: Types.Asset.Image;
  offMap?: Types.Devlink.Slot;
  offerExample?: Types.Visibility.VisibilityConditions;
  offVizAlt?: Types.Basic.AltText;
  offNameSrc?: React.ReactNode;
  offHookSrc?: React.ReactNode;
  offByVizSrc?: Types.Asset.Image;
  offTypeSrc?: React.ReactNode;
  offLimitSrc?: React.ReactNode;
  offActClick?: Types.Devlink.RuntimeProps;
  offCellClick?: Types.Devlink.RuntimeProps;
  offStat1?: React.ReactNode;
  offStat2?: React.ReactNode;
  offStat3?: React.ReactNode;
  offStat4?: React.ReactNode;
  addTxtSrc?: React.ReactNode;
  itmAcrdItmMap?: Types.Devlink.Slot;
}): React.JSX.Element;
