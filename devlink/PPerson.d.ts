import * as React from "react";
import * as Types from "./types";

declare function PPerson(props: {
  as?: React.ElementType;
  heroImgSrc?: Types.Asset.Image;
  heroAvtrSrc?: Types.Asset.Image;
  heroName?: React.ReactNode;
  heroHandle?: React.ReactNode;
  heroQrClick?: Types.Devlink.RuntimeProps;
  heroMoreClick?: Types.Devlink.RuntimeProps;
  heroBtn?: Types.Visibility.VisibilityConditions;
  heroBtnClick?: Types.Devlink.RuntimeProps;
  scanQrBtnClick?: Types.Devlink.RuntimeProps;
  searchClick?: Types.Devlink.RuntimeProps;
  addtoClick?: Types.Devlink.RuntimeProps;
  chatClick?: Types.Devlink.RuntimeProps;
  honorClick?: Types.Devlink.RuntimeProps;
  alertClick?: Types.Devlink.RuntimeProps;
  topPeepMap?: Types.Devlink.Slot;
  rank?: Types.Visibility.VisibilityConditions;
  rankAll?: Types.Visibility.VisibilityConditions;
  rankAllClick?: Types.Devlink.RuntimeProps;
  rankImgSrc?: Types.Asset.Image;
  rankImgAlt?: Types.Basic.AltText;
  rankName?: React.ReactNode;
  rankYr?: React.ReactNode;
  rankEstYr?: React.ReactNode;
  rankPts?: React.ReactNode;
  rankAchMap?: Types.Devlink.Slot;
  exampleAch?: Types.Visibility.VisibilityConditions;
  rankAct1Icn?: React.ReactNode;
  rankAct1Name?: React.ReactNode;
  rankAct1Pts?: React.ReactNode;
  rankAct1Time?: React.ReactNode;
  rankAct2Icn?: React.ReactNode;
  rankAct2Name?: React.ReactNode;
  rankAct2Pts?: React.ReactNode;
  rankAct2Time?: React.ReactNode;
  rankAct3Icn?: React.ReactNode;
  rankAct3Name?: React.ReactNode;
  rankAct3Pts?: React.ReactNode;
  rankAct3Time?: React.ReactNode;
  rankStatTotal?: React.ReactNode;
  fav?: Types.Visibility.VisibilityConditions;
  favAllClick?: Types.Devlink.RuntimeProps;
  favProdQty?: React.ReactNode;
  favPlaceQty?: React.ReactNode;
  favCreatorQty?: React.ReactNode;
  favStoreQty?: React.ReactNode;
  favBrandQty?: React.ReactNode;
  favProdClick?: Types.Devlink.RuntimeProps;
  favPlaceClick?: Types.Devlink.RuntimeProps;
  favCreatorClick?: Types.Devlink.RuntimeProps;
  favStoreClick?: Types.Devlink.RuntimeProps;
  favBrandClick?: Types.Devlink.RuntimeProps;
  peep?: Types.Visibility.VisibilityConditions;
  peepAllClick?: Types.Devlink.RuntimeProps;
  peepAvtrImg?: Types.Asset.Image;
  peepName?: React.ReactNode;
  peepConMap?: Types.Devlink.Slot;
  peepStatFam?: React.ReactNode;
  peepStatFriend?: React.ReactNode;
  peepStatAll?: React.ReactNode;
  peepGroupMap?: Types.Devlink.Slot;
  peepAct1Icn?: React.ReactNode;
  peepAct1Name?: React.ReactNode;
  peepAct1Pts?: React.ReactNode;
  peepAct1Time?: React.ReactNode;
  peepAct2Icn?: React.ReactNode;
  peepAct2Name?: React.ReactNode;
  peepAct2Pts?: React.ReactNode;
  peepAct2Time?: React.ReactNode;
  peepAct3Icn?: React.ReactNode;
  peepAct3Name?: React.ReactNode;
  peepAct3Pts?: React.ReactNode;
  peepAct3Time?: React.ReactNode;
  peepStatTotal?: React.ReactNode;
  list?: Types.Visibility.VisibilityConditions;
  lsAllClick?: Types.Devlink.RuntimeProps;
  lsVidSrc?: Types.Embed.Video;
  lsVidChanImg?: Types.Asset.Image;
  lsVidHook?: React.ReactNode;
  lsVidDetail?: React.ReactNode;
  lsVidPts?: React.ReactNode;
  lsVidDetClick?: Types.Devlink.RuntimeProps;
  lsVidAddClick?: Types.Devlink.RuntimeProps;
  lsSoonMap?: Types.Devlink.Slot;
  lsAct1ImgSrc?: Types.Asset.Image;
  lsAct1Itm?: React.ReactNode;
  lsAct1Type?: React.ReactNode;
  lsAct1Time?: React.ReactNode;
  lsAct1Click?: Types.Devlink.RuntimeProps;
  lsAct2ImgSrc?: Types.Asset.Image;
  lsAct2Itm?: React.ReactNode;
  lsAct2Type?: React.ReactNode;
  lsAct2Time?: React.ReactNode;
  lsAct2Click?: Types.Devlink.RuntimeProps;
  lsAct3ImgSrc?: Types.Asset.Image;
  lsAct3Itm?: React.ReactNode;
  lsAct3Type?: React.ReactNode;
  lsAct3Time?: React.ReactNode;
  lsAct3Click?: Types.Devlink.RuntimeProps;
  lsStatList?: React.ReactNode;
  lsStatItm?: React.ReactNode;
  lsStatPeep?: React.ReactNode;
  offer?: Types.Visibility.VisibilityConditions;
  offAllClick?: Types.Devlink.RuntimeProps;
  offVidSrc?: Types.Embed.Video;
  offVidChanImgSrc?: Types.Asset.Image;
  offVidHook?: React.ReactNode;
  offVidDetail?: React.ReactNode;
  offVidPts?: React.ReactNode;
  offVidDetClick?: Types.Devlink.RuntimeProps;
  offVidAddClick?: Types.Devlink.RuntimeProps;
  offerMap?: Types.Devlink.Slot;
  offAct1ImgSrc?: Types.Asset.Image;
  offAct1Hook?: React.ReactNode;
  offAct1Det?: React.ReactNode;
  offAct1Pts?: React.ReactNode;
  offAct1DetClick?: Types.Devlink.RuntimeProps;
  offAct1AddClick?: Types.Devlink.RuntimeProps;
  tie?: Types.Visibility.VisibilityConditions;
  place?: Types.Visibility.VisibilityConditions;
  community?: Types.Visibility.VisibilityConditions;
  body1Map?: Types.Devlink.Slot;
  body2Map?: Types.Devlink.Slot;
  body3Map?: Types.Devlink.Slot;
  body4Map?: Types.Devlink.Slot;
  body5Map?: Types.Devlink.Slot;
  body6Map?: Types.Devlink.Slot;
  body7Map?: Types.Devlink.Slot;
}): React.JSX.Element;
