import * as React from "react";
import * as Types from "./types";

declare function SnipSecRank(props: {
  as?: React.ElementType;
  sec?: Types.Visibility.VisibilityConditions;
  secHead?: Types.Visibility.VisibilityConditions;
  stats?: Types.Visibility.VisibilityConditions;
  secHeadTitleIcn?: Types.Visibility.VisibilityConditions;
  secHeadAct1?: Types.Visibility.VisibilityConditions;
  secHeadTitleIcnSrc?: React.ReactNode;
  secHeadTitleSrc?: React.ReactNode;
  secHeadAct1TxtSrc?: React.ReactNode;
  secHeadAct1Click?: Types.Devlink.RuntimeProps;
  conRankVizSrc?: Types.Asset.Image;
  conRankVizAlt?: Types.Basic.AltText;
  conRankTitleSrc?: React.ReactNode;
  conRankYrSrc?: React.ReactNode;
  conRankEstYrSrc?: React.ReactNode;
  conRankPtsSrc?: React.ReactNode;
  conSec1Map?: Types.Devlink.Slot;
  conExampleCellAchievement?: Types.Visibility.VisibilityConditions;
  conActvMap?: Types.Devlink.Slot;
  conExampleCellActvItm?: Types.Visibility.VisibilityConditions;
  exSec1Sec1Sec?: Types.Visibility.VisibilityConditions;
  exSec1Sec1SecHead?: Types.Visibility.VisibilityConditions;
  exSec1Sec1AdptIcnSrc?: React.ReactNode;
  exSec1Sec1AdptBgClr?: Types.Builtin.Text;
  exSec1Sec1AdptShape?: Types.Builtin.Text;
  exSec1Sec1AdptSz?: Types.Builtin.Text;
  exSec1Sec1TitleSrc?: React.ReactNode;
  exSec1Sec1CellClick?: Types.Devlink.RuntimeProps;
  exActvActvSec?: Types.Visibility.VisibilityConditions;
  exActvActvSecHead?: Types.Visibility.VisibilityConditions;
  exActvActvHeadTitleIcn?: Types.Visibility.VisibilityConditions;
  exActvActvHeadAct1?: Types.Visibility.VisibilityConditions;
  exActvActvHeadTitleIcnSrc?: React.ReactNode;
  exActvActvHeadTitleSrc?: React.ReactNode;
  exActvActvHeadAct1TxtSrc?: React.ReactNode;
  exActvActvHeadAct1Click?: Types.Devlink.RuntimeProps;
  exActvActvVizSrc?: Types.Asset.Image;
  exActvActvVizAlt?: Types.Basic.AltText;
  exActvActvTitleSrc?: React.ReactNode;
  exActvActvSubtxtSrc?: React.ReactNode;
  exActvActvRTxtSrc?: React.ReactNode;
  stat1Src?: React.ReactNode;
  stat2Src?: React.ReactNode;
  stat3Src?: React.ReactNode;
  exActvActvAct?: Types.Visibility.VisibilityConditions;
  exActvActvActClick?: Types.Devlink.RuntimeProps;
  exActvActvClick?: Types.Devlink.RuntimeProps;
  stat4Src?: React.ReactNode;
  stat2?: Types.Visibility.VisibilityConditions;
  stat3?: Types.Visibility.VisibilityConditions;
  stat4?: Types.Visibility.VisibilityConditions;
}): React.JSX.Element;
