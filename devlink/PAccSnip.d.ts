import * as React from "react";
import * as Types from "./types";

declare function PAccSnip(props: {
  as?: React.ElementType;
  qrClick?: Types.Devlink.RuntimeProps;
  heroImgSrc?: Types.Asset.Image;
  heroBtnClick?: Types.Devlink.RuntimeProps;
  userAvtrClick?: Types.Devlink.RuntimeProps;
  userAvtrSrc?: Types.Asset.Image;
  userName?: React.ReactNode;
  userHandle?: React.ReactNode;
  secEditClick?: Types.Devlink.RuntimeProps;
  secEmail?: React.ReactNode;
  secPhone?: React.ReactNode;
  secPin?: React.ReactNode;
  secBio?: React.ReactNode;
  profEditClick?: Types.Devlink.RuntimeProps;
  profName?: React.ReactNode;
  profRankName?: React.ReactNode;
  profRankYr?: React.ReactNode;
  profLoc?: React.ReactNode;
  profLink?: React.ReactNode;
  profSocFb?: React.ReactNode;
  profSocGoogle?: React.ReactNode;
  profSocX?: React.ReactNode;
  profSocInsta?: React.ReactNode;
  profSocPint?: React.ReactNode;
  setEditClick?: Types.Devlink.RuntimeProps;
  setTheme?: React.ReactNode;
  setLang?: React.ReactNode;
  setCountry?: React.ReactNode;
  setCrnc?: React.ReactNode;
  setMeasure?: React.ReactNode;
  setTz?: React.ReactNode;
  setPermLoc?: React.ReactNode;
  setPermCam?: React.ReactNode;
  setPermCont?: React.ReactNode;
  setPermCal?: React.ReactNode;
  setPermPhoto?: React.ReactNode;
  setPermMic?: React.ReactNode;
  favsEditClick?: Types.Devlink.RuntimeProps;
  favStoreExample?: Types.Visibility.VisibilityConditions;
  favStoreEmpty?: Types.Visibility.VisibilityConditions;
  favStoreEmptyClick?: Types.Devlink.RuntimeProps;
  favStoreMap?: Types.Devlink.Slot;
  favBrandExample?: Types.Visibility.VisibilityConditions;
  favBrandEmpty?: Types.Visibility.VisibilityConditions;
  favBrandEmptyClick?: Types.Devlink.RuntimeProps;
  favBrandMap?: Types.Devlink.Slot;
  favPlaceExample?: Types.Visibility.VisibilityConditions;
  favPlaceEmpty?: Types.Visibility.VisibilityConditions;
  favPlaceEmptyClick?: Types.Devlink.RuntimeProps;
  favPlaceMap?: Types.Devlink.Slot;
  favProdExample?: Types.Visibility.VisibilityConditions;
  favProdEmpty?: Types.Visibility.VisibilityConditions;
  favProdMap?: Types.Devlink.Slot;
  favProdEmptyClick?: Types.Devlink.RuntimeProps;
  favCreatorExample?: Types.Visibility.VisibilityConditions;
  favCreatorEmpty?: Types.Visibility.VisibilityConditions;
  favCreatorEmptyClick?: Types.Devlink.RuntimeProps;
  favCreatorMap?: Types.Devlink.Slot;
}): React.JSX.Element;
