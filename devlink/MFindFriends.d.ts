import * as React from "react";
import * as Types from "./types";

declare function MFindFriends(props: {
  as?: React.ElementType;
  mbrCancelClick?: Types.Devlink.RuntimeProps;
  mbrCardMap?: Types.Devlink.Slot;
  mbrCellExample?: Types.Visibility.VisibilityConditions;
  mbrScanQrClick?: Types.Devlink.RuntimeProps;
  mbrFltrClick?: Types.Devlink.RuntimeProps;
  invtCancelClick?: Types.Devlink.RuntimeProps;
  invtShakeClick?: Types.Devlink.RuntimeProps;
  invtShakeCancelClick?: Types.Devlink.RuntimeProps;
  invtShakeGroupClick?: Types.Devlink.RuntimeProps;
  invtShakeFindClick?: Types.Devlink.RuntimeProps;
  invtScanClick?: Types.Devlink.RuntimeProps;
  invtScan?: Types.Visibility.VisibilityConditions;
  invtScanMap?: Types.Devlink.Slot;
  invtScanCancelClick?: Types.Devlink.RuntimeProps;
  invtScanQrSrc?: Types.Asset.Image;
  invtSmsClick?: Types.Devlink.RuntimeProps;
  invtEmailClick?: Types.Devlink.RuntimeProps;
  contCancelClick?: Types.Devlink.RuntimeProps;
  contEmpty?: Types.Visibility.VisibilityConditions;
  contCard?: Types.Visibility.VisibilityConditions;
  contCnctClick?: Types.Devlink.RuntimeProps;
  contCardMap?: Types.Devlink.Slot;
  fbCancelClick?: Types.Devlink.RuntimeProps;
  fbEmpty?: Types.Visibility.VisibilityConditions;
  fbCard?: Types.Visibility.VisibilityConditions;
  fbCnctClick?: Types.Devlink.RuntimeProps;
  fbCardMap?: Types.Devlink.Slot;
  twitCancelClick?: Types.Devlink.RuntimeProps;
  twitEmpty?: Types.Visibility.VisibilityConditions;
  twitCard?: Types.Visibility.VisibilityConditions;
  twitCnctClick?: Types.Devlink.RuntimeProps;
  twitCardMap?: Types.Devlink.Slot;
  invtEmail?: Types.Visibility.VisibilityConditions;
  invtEmailMap?: Types.Devlink.Slot;
  invtEmailQrImgSrc?: Types.Asset.Image;
  invtEmailFromTxtSrc?: React.ReactNode;
  invtEmailSendClick?: Types.Devlink.RuntimeProps;
  invtSms?: Types.Visibility.VisibilityConditions;
  invtSmsMap?: Types.Devlink.Slot;
  invtSmsQrImgSrc?: Types.Asset.Image;
  invtSmsFromTxtSrc?: React.ReactNode;
  invtSmsSendClick?: Types.Devlink.RuntimeProps;
  invtShake?: Types.Visibility.VisibilityConditions;
  invtShakeMap?: Types.Devlink.Slot;
}): React.JSX.Element;
