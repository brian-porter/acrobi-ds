import * as React from "react";
import * as Types from "./types";

declare function PItemLib(props: {
  as?: React.ElementType;
  itmHead?: Types.Visibility.VisibilityConditions;
  itmImgSrc?: Types.Asset.Image;
  itmImgAlt?: Types.Basic.AltText;
  itmName?: React.ReactNode;
  libAddClick?: Types.Devlink.RuntimeProps;
  scanBtn?: Types.Visibility.VisibilityConditions;
  scanBtnClick?: Types.Devlink.RuntimeProps;
  searchClick?: Types.Devlink.RuntimeProps;
  searchChange?: Types.Builtin.Text;
  fltrBtn?: Types.Visibility.VisibilityConditions;
  fltrClick?: Types.Devlink.RuntimeProps;
  man?: Types.Visibility.VisibilityConditions;
  recipe?: Types.Visibility.VisibilityConditions;
  guide?: Types.Visibility.VisibilityConditions;
  coms?: Types.Visibility.VisibilityConditions;
  myAcrdMyClick?: Types.Devlink.RuntimeProps;
  myAcrdMyMap?: Types.Devlink.Slot;
  myExampleMyDoc?: Types.Visibility.VisibilityConditions;
  myMyDocMap?: Types.Devlink.Slot;
  myMyDocImgSrc?: Types.Asset.Image;
  myMyDocImgAlt?: Types.Basic.AltText;
  myMyDocTitleSrc?: React.ReactNode;
  myMyDocClick?: Types.Devlink.RuntimeProps;
  myMyDocEmpty?: Types.Visibility.VisibilityConditions;
  myMyDocEmptyClick?: Types.Devlink.RuntimeProps;
  manAcrdManClick?: Types.Devlink.RuntimeProps;
  manAcrdManMap?: Types.Devlink.Slot;
  manExampleMan?: Types.Visibility.VisibilityConditions;
  manManMap?: Types.Devlink.Slot;
  manManImgSrc?: Types.Asset.Image;
  manManImgAlt?: Types.Basic.AltText;
  manManTitleSrc?: React.ReactNode;
  manManClick?: Types.Devlink.RuntimeProps;
  recipeAcrdRecipeClick?: Types.Devlink.RuntimeProps;
  recipeAcrdRecipeMap?: Types.Devlink.Slot;
  recipeExampleRecipe?: Types.Visibility.VisibilityConditions;
  recipeRecipeMap?: Types.Devlink.Slot;
  recipeRecipeImgSrc?: Types.Asset.Image;
  recipeRecipeImgAlt?: Types.Basic.AltText;
  recipeRecipeTitleSrc?: React.ReactNode;
  recipeRecipeClick?: Types.Devlink.RuntimeProps;
  recipeSlotIdRecipe?: Types.Basic.IdTextInput;
  guideAcrdGuideClick?: Types.Devlink.RuntimeProps;
  guideAcrdGuideMap?: Types.Devlink.Slot;
  guideExampleGuide?: Types.Visibility.VisibilityConditions;
  guideGuideMap?: Types.Devlink.Slot;
  guideGuideImgSrc?: Types.Asset.Image;
  guideGuideImgAlt?: Types.Basic.AltText;
  guideGuideTitleSrc?: React.ReactNode;
  guideGuideClick?: Types.Devlink.RuntimeProps;
  guideSlotIdGuides?: Types.Basic.IdTextInput;
  comsAcrdComsClick?: Types.Devlink.RuntimeProps;
  comsAcrdComsMap?: Types.Devlink.Slot;
  comsExampleComs?: Types.Visibility.VisibilityConditions;
  comsComsAdptIcnSrc?: React.ReactNode;
  comsComsAdptBgClr?: Types.Builtin.Text;
  comsComsTitleSrc?: React.ReactNode;
  comsComsSubtxtSrc?: React.ReactNode;
  comsComsTimeSrc?: React.ReactNode;
  comsComsClick?: Types.Devlink.RuntimeProps;
  feature?: Types.Visibility.VisibilityConditions;
  featureFeatureMap?: Types.Devlink.Slot;
  featureExampleFeature?: Types.Visibility.VisibilityConditions;
  featureFeatureImgSrc?: Types.Asset.Image;
  featureFeatureImgAlt?: Types.Basic.AltText;
  featureFeatureTitleSrc?: React.ReactNode;
  featureFeatureClick?: Types.Devlink.RuntimeProps;
  issue?: Types.Visibility.VisibilityConditions;
  issueIssueAdd?: Types.Visibility.VisibilityConditions;
  issueIssueAddClick?: Types.Devlink.RuntimeProps;
  issueIssueMap?: Types.Devlink.Slot;
  issueExampleIssueChip?: Types.Visibility.VisibilityConditions;
  issueIssueTxtSrc?: React.ReactNode;
  issueIssueClick?: Types.Devlink.RuntimeProps;
  parts?: Types.Visibility.VisibilityConditions;
  partsPartsMap?: Types.Devlink.Slot;
  partsExampleParts?: Types.Visibility.VisibilityConditions;
  partsPartsImgSrc?: Types.Asset.Image;
  partsPartsImgAlt?: Types.Basic.AltText;
  partsPartsActClick?: Types.Devlink.RuntimeProps;
  partsPartsQty?: Types.Visibility.VisibilityConditions;
  partsPartsQtySrc?: React.ReactNode;
  partsPartsTitleSrc?: React.ReactNode;
  partsPartsNumSrc?: React.ReactNode;
  partsPartsAmt?: React.ReactNode;
  partsPartsClick?: Types.Devlink.RuntimeProps;
  manSlotIdMan?: Types.Basic.IdTextInput;
  mySlotIdMy?: Types.Basic.IdTextInput;
  partsSlotIdParts?: Types.Basic.IdTextInput;
}): React.JSX.Element;
