import * as React from "react";
import * as Types from "./types";

declare function NavDesigner(props: {
  as?: React.ElementType;
  navDsg?: Types.Visibility.VisibilityConditions;
  baseBase?: Types.Visibility.VisibilityConditions;
  baseBaseAdj?: Types.Visibility.VisibilityConditions;
  baseBaseStyle?: Types.Visibility.VisibilityConditions;
  baseBaseAlt?: Types.Visibility.VisibilityConditions;
  baseBaseTrim?: Types.Visibility.VisibilityConditions;
  baseBaseOrn?: Types.Visibility.VisibilityConditions;
  baseBaseAdjClick?: Types.Devlink.RuntimeProps;
  baseBaseStyleClick?: Types.Devlink.RuntimeProps;
  baseBaseAltClick?: Types.Devlink.RuntimeProps;
  baseBaseTrimClick?: Types.Devlink.RuntimeProps;
  baseBaseOrnClick?: Types.Devlink.RuntimeProps;
  adjAdj?: Types.Visibility.VisibilityConditions;
  adjAdjCrop?: Types.Visibility.VisibilityConditions;
  adjAdjRotate?: Types.Visibility.VisibilityConditions;
  adjAdjFlipH?: Types.Visibility.VisibilityConditions;
  adjAdjFlipV?: Types.Visibility.VisibilityConditions;
  adjAdjCropClick?: Types.Devlink.RuntimeProps;
  adjAdjRotateClick?: Types.Devlink.RuntimeProps;
  adjAdjFlipHClick?: Types.Devlink.RuntimeProps;
  adjAdjFlipVClick?: Types.Devlink.RuntimeProps;
  altAlt?: Types.Visibility.VisibilityConditions;
  altAltStyle?: Types.Visibility.VisibilityConditions;
  altAltExposure?: Types.Visibility.VisibilityConditions;
  altAltBrightness?: Types.Visibility.VisibilityConditions;
  altAltContrast?: Types.Visibility.VisibilityConditions;
  trimTrim?: Types.Visibility.VisibilityConditions;
  trimTrimTxt?: Types.Visibility.VisibilityConditions;
  trimTrimDraw?: Types.Visibility.VisibilityConditions;
  trimTrimLine?: Types.Visibility.VisibilityConditions;
  trimTrimBox?: Types.Visibility.VisibilityConditions;
  trimTrimCircle?: Types.Visibility.VisibilityConditions;
  trimTrimTxtClick?: Types.Devlink.RuntimeProps;
  trimTrimDrawClick?: Types.Devlink.RuntimeProps;
  trimTrimLineClick?: Types.Devlink.RuntimeProps;
  trimTrimBoxClick?: Types.Devlink.RuntimeProps;
  trimTrimCircleClick?: Types.Devlink.RuntimeProps;
  styleStyle?: Types.Visibility.VisibilityConditions;
  styleStyleFrame?: Types.Visibility.VisibilityConditions;
  styleStyleColor?: Types.Visibility.VisibilityConditions;
  styleStyleFrameClick?: Types.Devlink.RuntimeProps;
  styleStyleColorClick?: Types.Devlink.RuntimeProps;
  ornOrn?: Types.Visibility.VisibilityConditions;
  ornOrnSticker?: Types.Visibility.VisibilityConditions;
  ornOrnStickerClick?: Types.Devlink.RuntimeProps;
  altAltStyleClick?: Types.Devlink.RuntimeProps;
  altAltExposureClick?: Types.Devlink.RuntimeProps;
  altAltBrightnessClick?: Types.Devlink.RuntimeProps;
  altAltContrastClick?: Types.Devlink.RuntimeProps;
}): React.JSX.Element;
