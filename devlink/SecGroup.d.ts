import * as React from "react";
import * as Types from "./types";

declare function SecGroup(props: {
  as?: React.ElementType;
  secHeadTitleIcn?: Types.Visibility.VisibilityConditions;
  secHeadAct1?: Types.Visibility.VisibilityConditions;
  secHeadTitleIcnSrc?: React.ReactNode;
  secHeadTitleSrc?: React.ReactNode;
  secHeadAct1TxtSrc?: React.ReactNode;
  secHeadAct1Click?: Types.Devlink.RuntimeProps;
  conSideFade?: Types.Visibility.VisibilityConditions;
  conCellMap?: Types.Devlink.Slot;
  exampleVizSrc?: Types.Asset.Image;
  exampleVizAlt?: Types.Basic.AltText;
  exampleVizSz?: Types.Builtin.Text;
  exampleCellSz?: Types.Builtin.Text;
  exampleBnrAvtr1Src?: Types.Asset.Image;
  exampleBnrAvtr2Src?: Types.Asset.Image;
  exampleBnrAvtr3Src?: Types.Asset.Image;
  exampleBnrAvtr4Src?: Types.Asset.Image;
  exampleBnrAvtr5Src?: Types.Asset.Image;
  exampleBnrAvtr2?: Types.Visibility.VisibilityConditions;
  exampleBnrAvtr3?: Types.Visibility.VisibilityConditions;
  exampleBnrAvtr4?: Types.Visibility.VisibilityConditions;
  exampleBnrAvtr5?: Types.Visibility.VisibilityConditions;
  exampleQtySrc?: React.ReactNode;
  exampleCapt?: Types.Visibility.VisibilityConditions;
  exampleTitleSrc?: React.ReactNode;
  exampleRow1Lc?: Types.Builtin.Text;
  sec?: Types.Visibility.VisibilityConditions;
  secHead?: Types.Visibility.VisibilityConditions;
  stats?: Types.Visibility.VisibilityConditions;
  stat1Src?: React.ReactNode;
  stat2Src?: React.ReactNode;
  stat3Src?: React.ReactNode;
  stat4Src?: React.ReactNode;
  stat2?: Types.Visibility.VisibilityConditions;
  stat3?: Types.Visibility.VisibilityConditions;
  stat4?: Types.Visibility.VisibilityConditions;
  emptyEmpty?: Types.Visibility.VisibilityConditions;
  emptyIcnSrc?: React.ReactNode;
  emptyHlineSrc?: React.ReactNode;
  emptySubTxtSrc?: React.ReactNode;
  emptyCtaTxtSrc?: React.ReactNode;
  emptyEmptyClick?: Types.Devlink.RuntimeProps;
}): React.JSX.Element;
